{{ if .Values.mongoManagement.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
	name: {{ .Values.mongoManagement.name }}
	labels:
		app: {{ .Values.mongoManagement.name }}
spec:
	revisionHistoryLimit: 1
	replicase: {{ .Values.mongoManagement.replacaCount }}
	selector:
		matchLabels:
			app: {{ .Values.mongoManagement.name }}
	stategy:
		type: RollingUpdate
		rollingUpdate:
			maxUnavalilable: 1
			maxSurge: 1
		templte:
			metadata:
				labels:
					app: {{ .Values.mongoManagement.name }}
			spec:
				{{- with .Values.mongoManagement.hostAliases }}
				affinity:
					{{- toYaml . | nindent 8 }}
				{{- end }}
				{{- with .Values.mongoManagement.hostAliases }}
				hostAliases:
					{{- toYaml . | nindent 8 }}
				{{- end }}
				{{- with .Values.imagePullSecrets }}
				imagePullSecrets:
					{{- toYaml . | nindent 8 }}
				{{- end }}
				containers:
					- name: app
					  imagePullPolicy: Always
					  image: {{ .Values.mongoManagement.image }}
					  {{- with .Values.mongoManagement.resource }}
					  resource:
								{{- toYaml . | nindent 12 }}
							{{- end }}
							{{ if .Values.mongoManagement.healthCheckPath }}
							livenessProbe:
								httpGet:
									path: {{ .Values.mongoManagement.healthCheckPath }}
									port: 5000
								intialDelaySeconds: 10
								periodSeconds: 5
							readinessProbe:
								httpGet:
									path: {{ .Values.mongoManagement.healthCheckPath }}
									port: 5000
								initialDelaySeconds: 10
								periodSeconds: 5
							{{- end }}
							{{- with .Values.mongoManagement.env }}
							env:
								{{- toYaml . | nindent 12 }}
							{{- end }}
							ports:
								- containerPort: 8000
							volumeMounts:
								{{- toYaml .Values.mongoManagement.volumeMounts | default "" | nindent 12 }}
					volumes:
						{{- toYaml }} 